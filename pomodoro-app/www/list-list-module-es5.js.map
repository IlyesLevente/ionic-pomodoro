{"version":3,"sources":["./src/app/list/list.page.html","./src/app/list/list.module.ts","./src/app/list/list.page.scss","./src/app/list/list.page.ts"],"names":[],"mappings":"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","file":"list-list-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"inline\\\">\\n      Lista\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"delete-wrapper\\\">\\n    <ion-button (click)=\\\"deleteTasks()\\\" size=\\\"small\\\" style=\\\"--background: #D81159\\\" class=\\\"center\\\">\\n      Töröl\\n    </ion-button>\\n  </div>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let task of sortedTasks\\\">\\n        <ion-card class=\\\"card\\\">\\n            <ion-card-header>\\n                  <ion-card-subtitle>{{task.location}}</ion-card-subtitle>\\n                  <ion-card-title>{{task.task}}</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              {{task.textarea}}\\n              <ion-label>{{task.start | date:'shortTime'}} - {{task.end | date:'shortTime'}}</ion-label>\\n            </ion-card-content>\\n          </ion-card>   \\n          <ion-button style=\\\"float: right;\\\" (click)=\\\"deleteItem(task)\\\">\\n              <ion-icon  name=\\\"close\\\"></ion-icon>\\n          </ion-button>       \\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ListPage\n      }\n    ])\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","module.exports = \".delete-wrapper {\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  text-align: center;\\n}\\n\\n.card {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdC9EOlxcUHJvamVjdHNcXGlvbmljLXBvbW9kb3JvLXRpbWUtbWFuYWdlbWVudFxccG9tb2Rvcm8vc3JjXFxhcHBcXGxpc3RcXGxpc3QucGFnZS5zY3NzIiwic3JjL2FwcC9saXN0L2xpc3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFQTtFQUNJLFdBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2xpc3QvbGlzdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVsZXRlLXdyYXBwZXIge1xuICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY2FyZCB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG4iLCIuZGVsZXRlLXdyYXBwZXIge1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY2FyZCB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { TasksService, Task } from '../services/tasks.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: 'list.page.html',\n  styleUrls: ['list.page.scss']\n})\nexport class ListPage implements OnInit {\n\n  tasks = [];\n  sortedTasks = [];\n  sortType = 'start';\n  constructor(private tasksService: TasksService) {\n  }\n\n  ionViewDidEnter() {\n    this.getTasks();\n    if ( this.tasks )  {this.sortedTasks = this.tasks.sort((a, b) => a.start.toString().localeCompare(b.start.toString())); }\n  }\n\n  async ngOnInit() {\n    await this.getTasks();\n    if ( this.tasks )  { this.sortedTasks = this.tasks.sort((a, b) => a.start.toString().localeCompare(b.start.toString())); }\n  }\n\n  async deleteItem(task) {\n    await this.tasksService.deleteTask(task.id);\n    await this.getTasks();\n    if ( this.tasks )  { this.sortedTasks = this.tasks.sort((a, b) => a.start.toString().localeCompare(b.start.toString())); }\n  }\n\n  async getTasks() {\n    await this.tasksService.getTasks().then(tasks => {\n      this.tasks = tasks;\n    });\n  }\n\n  async deleteTasks() {\n    await this.tasksService.deleteTasks();\n    await this.getTasks();\n    this.sortedTasks = this.tasks;\n  }\n\n}\n"],"sourceRoot":""}